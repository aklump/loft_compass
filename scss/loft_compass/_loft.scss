/**
 * Output font-size (and line-height) in rem with px fallback
 *
 * @param $size
 *   rem and px: will be converted to rem with px fallback
 *   % and em will pass through without conversion
 * @param $line_height
 *   Optional, behaves same as $size
 */
@mixin font_size($size, $line_height: false){
  $rem_ratio: 16px / 1rem;

  $unit: unit($size);
  @if $unit == 'rem' {
    font-size: $size * $rem_ratio;
    font-size: $size;
  }
  @else if $unit == 'px' {
    font-size: $size;
    font-size: $size / $rem_ratio;
  }
  @else {
    font-size: $size;
  }

  @if $line_height {
    $unit: unit($line_height);
    @if $unit == 'rem' {
      line-height: $line_height * $rem_ratio;
      line-height: $line_height;
    }
    @else if $unit == 'px' {
      line-height: $line_height;
      line-height: $line_height / $rem_ratio;
    }
    @else {
      line-height: $line_height;
    }
  }
}

/**
 * Convert rem to pixels
 *
 * @param mixed $rem
 *
 * @return mixed
 */
@function rem_px($rem) {
  $rem_ratio: 16px / 1rem;
  @return $rem * $rem_ratio;
}

//
// A mixin to make an img responsive
// 
@mixin responsive_img() {
  width: 100%;
  height: auto;
  vertical-align: bottom;
}